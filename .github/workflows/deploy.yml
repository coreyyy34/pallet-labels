name: Deploy

on:
    push:
    pull_request:

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm test

    build-and-deploy:
        if: github.ref == 'refs/heads/main'
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Registry
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.CI_REGISTRY_USER }}
                  password: ${{ secrets.CI_REGISTRY_PASSWORD }}

            - name: Set environment variables
              run: |
                  echo "CONTAINER_NAME=${{ secrets.CI_PROJECT_NAME }}" >> $GITHUB_ENV
                  echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
                  echo "TAG=latest" >> $GITHUB_ENV

            - name: Build Docker Image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  tags: |
                      ${{ secrets.CI_REGISTRY }}/${{ secrets.CI_PROJECT_NAME }}:${{ env.TAG }}
                      ${{ secrets.CI_REGISTRY }}/${{ secrets.CI_PROJECT_NAME }}:${{ github.sha }}
                  build-args: |
                      NEXT_PUBLIC_POSTHOG_KEY=${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }}
                  cache-from: type=registry,ref=${{ secrets.CI_REGISTRY }}/${{ secrets.CI_PROJECT_NAME }}:cache
                  cache-to: type=inline

            - name: Deploy
              uses: appleboy/ssh-action@v1.2.2
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USERNAME }}
                  key: ${{ secrets.VPS_SSH_KEY }}
                  port: ${{ secrets.VPS_PORT }}
                  script: |
                      docker pull ${{ secrets.CI_REGISTRY }}/${{ secrets.CI_PROJECT_NAME }}:${{ env.TAG }}
                      docker stop ${{ env.CONTAINER_NAME }} || true
                      docker rm ${{ env.CONTAINER_NAME }} || true
                      docker run -d --name ${{ env.CONTAINER_NAME }} \
                        -p ${{ env.PORT }}:3000 \
                        --restart unless-stopped \
                        ${{ secrets.CI_REGISTRY }}/${{ secrets.CI_PROJECT_NAME }}:${{ env.TAG }}
